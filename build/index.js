(()=>{"use strict";const e=window.wp.hooks,i=window.wp.blocks,a=window.wp.data,n=window.wp.i18n,t=window.wp.blockEditor,o=window.wp.element,s=window.wp.components,l=[{name:"The Buddha",slug:"the-buddha",link:"https://en.wikipedia.org/wiki/The_Buddha"},{name:"Ralph Waldo Emerson",slug:"ralph-waldo-emerson",link:"https://en.wikipedia.org/wiki/Ralph_Waldo_Emerson"},{name:"Albert Einstein",slug:"albert-einstein",link:"https://en.wikipedia.org/wiki/Albert_Einstein"},{name:"Confucius",slug:"confucius",link:"https://en.wikipedia.org/wiki/Confucius"},{name:"Laozi",slug:"laozi",link:"https://en.wikipedia.org/wiki/Laozi"},{name:"Winston Churchill",slug:"winston-churchill",link:"https://en.wikipedia.org/wiki/Winston_Churchill"},{name:"Abraham Lincoln",slug:"abraham-lincoln",link:"https://en.wikipedia.org/wiki/Abraham_Lincoln"},{name:"Richard Bach",slug:"richard-bach",link:"https://en.wikipedia.org/wiki/Richard_Bach"},{name:"Napoleon Hill",slug:"napoleon-hill",link:"https://en.wikipedia.org/wiki/Napoleon_Hill"},{name:"Thomas Edison",slug:"thomas-edison",link:"https://en.wikipedia.org/wiki/Thomas_Edison"},{name:"Dalai Lama",slug:"dalai-lama",link:"https://en.wikipedia.org/wiki/Dalai_Lama"},{name:"Wayne Dyer",slug:"wayne-dyer",link:"https://en.wikipedia.org/wiki/Wayne_Dyer"},{name:"Epictetus",slug:"epictetus",link:"https://en.wikipedia.org/wiki/Epictetus"},{name:"Johann Wolfgang von Goethe",slug:"johann-wolfgang-von-goethe",link:"https://en.wikipedia.org/wiki/Johann_Wolfgang_von_Goethe"},{name:"Alan Watts",slug:"alan-watts",link:"https://en.wikipedia.org/wiki/Alan_Watts"},{name:"Aristotle",slug:"aristotle",link:"https://en.wikipedia.org/wiki/Aristotle"},{name:"Tony Robbins",slug:"tony-robbins",link:"https://en.wikipedia.org/wiki/Tony_Robbins"},{name:"Henry David Thoreau",slug:"henry-david-thoreau",link:"https://en.wikipedia.org/wiki/Henry_David_Thoreau"},{name:"Benjamin Franklin",slug:"benjamin-franklin",link:"https://en.wikipedia.org/wiki/Benjamin_Franklin"},{name:"Bruce Lee",slug:"bruce-lee",link:"https://en.wikipedia.org/wiki/Bruce_Lee"},{name:"Marcus Aurelius",slug:"marcus-aurelius",link:"https://en.wikipedia.org/wiki/Marcus_Aurelius"},{name:"Kahlil Gibran",slug:"kahlil-gibran",link:"https://en.wikipedia.org/wiki/Kahlil_Gibran"},{name:"William Shakespeare",slug:"william-shakespeare",link:"https://en.wikipedia.org/wiki/William_Shakespeare"},{name:"Woody Allen",slug:"woody-allen",link:"https://en.wikipedia.org/wiki/Woody_Allen"},{name:"Seneca the Younger",slug:"seneca-the-younger",link:"https://en.wikipedia.org/wiki/Seneca_the_Younger"},{name:"Eleanor Roosevelt",slug:"eleanor-roosevelt",link:"https://en.wikipedia.org/wiki/Eleanor_Roosevelt"},{name:"Carl Jung",slug:"carl-jung",link:"https://en.wikipedia.org/wiki/Carl_Jung"},{name:"Mark Twain",slug:"mark-twain",link:"https://en.wikipedia.org/wiki/Mark_Twain"},{name:"Elbert Hubbard",slug:"elbert-hubbard",link:"https://en.wikipedia.org/wiki/Elbert_Hubbard"},{name:"Mahatma Gandhi",slug:"mahatma-gandhi",link:"https://en.wikipedia.org/wiki/Mahatma_Gandhi"}],r=[{name:"Famous Quotes",slug:"famous-quotes"},{name:"Wisdom",slug:"wisdom"},{name:"Friendship",slug:"friendship"},{name:"Inspirational",slug:"inspirational"},{name:"Success",slug:"success"},{name:"Technology",slug:"technology"},{name:"Sports",slug:"sports"},{name:"Life",slug:"life"},{name:"Competition",slug:"competition"},{name:"Change",slug:"change"},{name:"Motivational",slug:"motivational"},{name:"Business",slug:"business"},{name:"Future",slug:"future"},{name:"Love",slug:"love"},{name:"Happiness",slug:"happiness"},{name:"History",slug:"history"},{name:"Character",slug:"character"},{name:"Humorous",slug:"humorous"},{name:"Philosophy",slug:"philosophy"},{name:"Politics",slug:"politics"},{name:"Science",slug:"science"},{name:"Film",slug:"film"},{name:"Virtue",slug:"virtue"},{name:"Freedom",slug:"freedom"},{name:"Education",slug:"education"},{name:"Truth",slug:"truth"},{name:"Religion",slug:"religion"},{name:"Self",slug:"self"},{name:"Honor",slug:"honor"},{name:"Self Help",slug:"self-help"},{name:"Faith",slug:"faith"},{name:"Spirituality",slug:"spirituality"},{name:"Social Justice",slug:"social-justice"},{name:"War",slug:"war"},{name:"Knowledge",slug:"knowledge"},{name:"Work",slug:"work"},{name:"Nature",slug:"nature"},{name:"Courage",slug:"courage"},{name:"Family",slug:"family"},{name:"Power Quotes",slug:"power-quotes"},{name:"Imagination",slug:"imagination"},{name:"Perseverance",slug:"perseverance"},{name:"Literature",slug:"literature"},{name:"Conservative",slug:"conservative"},{name:"Time",slug:"time"},{name:"Pain",slug:"pain"},{name:"Leadership",slug:"leadership"},{name:"Mathematics",slug:"mathematics"},{name:"Ethics",slug:"ethics"},{name:"Society",slug:"society"},{name:"Tolerance",slug:"tolerance"},{name:"Stupidity",slug:"stupidity"},{name:"Weakness",slug:"weakness"},{name:"Generosity",slug:"generosity"},{name:"Gratitude",slug:"gratitude"},{name:"Age",slug:"age"},{name:"Sadness",slug:"sadness"},{name:"Opportunity",slug:"opportunity"},{name:"Failure",slug:"failure"},{name:"Health",slug:"health"},{name:"Wellness",slug:"wellness"},{name:"Creativity",slug:"creativity"},{name:"Genius",slug:"genius"},{name:"Proverb",slug:"proverb"},{name:"Humor",slug:"humor"},{name:"Athletics",slug:"athletics"}],u="https://api.quotable.io",g={QUOTABLE_API_URL:u,URL_RANDOM_QUOTE:`${u}/quotes/random`,URL_RANDOM_BY_AUTHOR:`${u}/quotes?author=<%AUTHOR%>`,AUTHOR_TAG:"<%AUTHOR%>"},m=window.ReactJSXRuntime,{URL_RANDOM_QUOTE:p,URL_RANDOM_BY_AUTHOR:c,AUTHOR_TAG:h}=g,d=e=>{const{clientId:r,setAttributes:u}=e,[g,d]=(0,o.useState)(""),{replaceInnerBlocks:k}=(0,a.useDispatch)("core/block-editor"),w={value:"",label:(0,n.__)("Any Author","quote-api")};return(0,m.jsx)(t.InspectorControls,{children:(0,m.jsxs)(s.PanelBody,{title:(0,n.__)("Quote settings","quote-api"),initialOpen:!0,children:[(0,m.jsx)(s.PanelRow,{children:(0,m.jsx)(s.SelectControl,{label:(0,n.__)("Filter by Author","quote-api"),__next40pxDefaultSize:!0,options:[w,...l.map((({slug:e,name:i})=>({value:e,label:i})))],value:w.key,onChange:e=>{d(e)}})}),(0,m.jsx)(s.PanelRow,{children:(0,m.jsx)(s.Button,{variant:"primary",label:(0,n.__)("Update data","quote-api"),onClick:()=>{fetch(g?c.replace(h,g):p).then((e=>e.json())).then((e=>{let a,n;({author:a,content:n}=g?e.results[Math.floor(Math.random()*e.results.length)]:e[0]),u({citation:a});const t=[(0,i.createBlock)("core/paragraph",{content:n})];k(r,t)}))},icon:"update",iconPosition:"left",children:(0,n.__)("Get random quote","")})})]})})};const k=e=>{const{clientId:l}=e,{replaceInnerBlocks:u}=(0,a.useDispatch)("core/block-editor"),{getBlock:g}=(0,a.select)("core/block-editor"),p=g(l).innerBlocks[0].clientId,{tags:c}=g(p).attributes,[h,d]=(0,o.useState)(c?c.split("|"):[]),k=r.map((e=>e.name));return(0,m.jsx)(t.InspectorControls,{children:(0,m.jsx)(s.PanelBody,{title:(0,n.__)("Quote settings","quote-api"),initialOpen:!0,children:(0,m.jsx)(s.PanelRow,{children:(0,m.jsx)(s.FormTokenField,{__nextHasNoMarginBottom:!0,label:"Type a Tag",onChange:e=>{d(e);const a=[(0,i.createBlock)("core/paragraph",{metadata:{bindings:{content:{source:"qa/random-quote-tags",args:{tags:e.join("|")}}}},tags:e.join("|"),content:"This content will be replaced in the frontend with a random quote from either of the tags: "+e.join(", ")})];u(l,a)},suggestions:k,value:h})})})})};console.log("quote-api-frontend/index.js");(0,e.addFilter)("blocks.registerBlockType","quote-api/add-attributes",(function(e){if("core/quote"!==e.name&&"core/paragraph"!==e.name)return e;let i={namespace:{type:"string"}};return"core/paragraph"===e.name&&(i={tags:{type:"string"}}),{...e,attributes:{...e.attributes,...i}}})),(0,i.registerBlockVariation)("core/quote",{name:"quote-api-editor",description:'A "core/quote" block variation that displays a random quote from the Quotable API',title:"Quote API Editor",scope:["block","inserter","transform"],keywords:["quote"],icon:"rest-api",attributes:{namespace:"quote-api-editor"},isActive:["namespace"]}),(0,e.addFilter)("editor.BlockEdit","quote-api-editor/add-inspector-controls",(function(e){return i=>(e=>{const{attributes:{namespace:i}}=e;return i&&"quote-api-editor"===i})(i)?(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)(e,{...i}),(0,m.jsx)(d,{...i})]}):(0,m.jsx)(e,{...i})})),(0,i.registerBlockVariation)("core/quote",{name:"quote-api-frontend",description:'A "core/quote" block variation that displays a random quote from the Quotable API in the Frontend',title:"Quote API Frontend",scope:["block","inserter","transform"],keywords:["quote"],innerBlocks:[{name:"core/paragraph",attributes:{content:"This content will be replaced in the frontend with a random quote"}}],attributes:{namespace:"quote-api-frontend"},isActive:["namespace"]}),(0,e.addFilter)("editor.BlockEdit","quote-api-editor/add-inspector-controls",(function(e){return i=>(e=>{const{attributes:{namespace:i}}=e;return i&&"quote-api-frontend"===i})(i)?(0,m.jsxs)(m.Fragment,{children:[(0,m.jsx)(e,{...i}),(0,m.jsx)(k,{...i})]}):(0,m.jsx)(e,{...i})}))})();